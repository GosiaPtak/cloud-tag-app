{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cloud-app-service.service.ts","webpack:///./src/app/cloud-app/cloud-app.component.html","webpack:///./src/app/cloud-app/cloud-app.component.scss","webpack:///./src/app/cloud-app/cloud-app.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div\\n  id=\\\"myMainDiv\\\"\\n  style=\\\"width:200px;height:200px;border: solid 1px black; margin-left:40vw;\\\"\\n>\\n  <span *ngFor=\\\"let tag of tags\\\" [ngStyle]=\\\"{ 'font-size.px': tag.level }\\\">\\n    {{ tag.value }}</span\\n  >\\n</div>\\n<div *ngIf=\\\"error\\\">\\n  aaaa\\n  {{ message }}\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CloudAppServiceService, Tags } from './cloud-app-service.service';\nimport { Observable } from 'rxjs';\nimport { NGXLogger } from 'ngx-logger';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(private tagsService: CloudAppServiceService) {}\n  title = 'cloud-tag-app';\n  tags: Tags;\n\n  showTags() {\n    this.tagsService.getTags().subscribe((data: Tags) => {\n      this.tags = data;\n    });\n  }\n  ngOnInit() {\n    this.showTags();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CloudAppComponent } from './cloud-app/cloud-app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent, CloudAppComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\nexport interface Tags {\n  level: number;\n  value: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CloudAppServiceService {\n  tagListUrl = 'assets/tags.json';\n  public errorMessage = '';\n  constructor(private http: HttpClient) {}\n\n  getTags() {\n    return this.http.get<Tags>(this.tagListUrl).pipe(\n      retry(1),\n      catchError(this.handleError)\n    );\n  }\n  handleError(error) {\n    if (error.error instanceof ErrorEvent) {\n      this.errorMessage = `Error: ${error.error.message}`;\n    } else {\n      this.errorMessage = `Error Code: ${error.status}\\nMessage: ${\n        error.message\n      }`;\n    }\n    return throwError(this.errorMessage);\n  }\n}\n","module.exports = \"<p>\\n  cloud-app works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nsb3VkLWFwcC9jbG91ZC1hcHAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cloud-app',\n  templateUrl: './cloud-app.component.html',\n  styleUrls: ['./cloud-app.component.scss']\n})\nexport class CloudAppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}